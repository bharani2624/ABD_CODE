#include <stdio.h>
void swap(int *a,int *b){
    int temp;
    temp=*a;
    *a=*b;
    *b=temp;
}
int partition(int arr[],int low,int high){
    int pivot=arr[low];
    int i=low;
    int j=high;
    while(i<j){
        while(arr[i]<=pivot && i<high-1){
            i++;
        }
        while(arr[j]>pivot && j>=low+1){
            j--;
        }
        if(i<j){
            swap(&arr[i],&arr[j]);
        }

    }
        swap(&arr[low],&arr[j]);
        return j;
}
void quickSort(int arr[],int low,int high){
    if(low<high){
        int partitionIndex=partition(arr,low,high);
        quickSort(arr,low,partitionIndex-1);
        quickSort(arr,partitionIndex+1,high);
    }
}

int main(){
    int arr[]={2,1,3,5,4};
    int arr_new[]={6,7,8,9,10};
    int size_arr=sizeof(arr)/sizeof(arr[0]);
    int size_arr_new=sizeof(arr_new)/sizeof(arr_new[0]);
    int size_arr_ascending=size_arr+size_arr_new;
    int arr_ascending[size_arr_ascending];
    for(int i=0;i<size_arr;i++){
        arr_ascending[i]=arr[i];
    }
    for(int i=0;i<size_arr_new;i++){
        arr_ascending[i+size_arr]=arr_new[i];
    }
    for(int i=0;i<size_arr_ascending;i++){
        printf("%d ",arr_ascending[i]);
    }
    quickSort(arr_ascending,0,size_arr_ascending-1);

    for(int i=0;i<size_arr_ascending;i++){
    printf("    %d ",arr_ascending[i]);
    }
}